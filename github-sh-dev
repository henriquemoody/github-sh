#!/usr/bin/env bash
# Interactive Github Shell.
# Copyright (C) 2012 Henrique Moody <henriquemoody@gmail.com>.
#
# Authors
# =======
#   Henrique Moody <henriquemoody@gmail.com>
#
# Changelog
# =========
#   1.0.3   Update help message.
#   1.0.3   Update prompt with defined user data.
#   1.0.2   Created OSX compatibility
#   1.0.1   Update script structure
#   1.0.0   Base script
#

# Readonly vars
declare -r SCRIPT_NAME=$(basename "${0}")
declare -r SCRIPT_SOURCE="${0}"
declare -r SCRIPT_HISTORY="${HOME}/.github-sh_history"
declare -r SCRIPT_DIRECTORY=$(dirname "${0}")
declare -r SCRIPT_DESCRIPTION=$(sed -n 2p "${0}" |  sed -E 's/^# ?//g')
declare -r SCRIPT_VERSION=$(sed -n 11p "${0}" | awk '{print $2}')
declare -r SCRIPT_PROMPT="github"
declare -r SCRIPT_PROMPT_CHAR="> "
declare -r SCRIPT_HELP="Usage: ${SCRIPT_NAME} [OPTIONS]
${SCRIPT_DESCRIPTION}

    -h, --help      Displays this help.
    -s, --set       Defines default values for variables (\"user\", \"password\", \"project\").
    -v, --version   Displays the version of the program.
    -u, --update    Self update ${SCRIPT_NAME}.

Report bugs on https://github.com/henriquemoody/github-sh/issues."

# Global vars
declare GITHUB_PROMPT="${SCRIPT_PROMPT}${SCRIPT_PROMPT_CHAR}"
declare GITHUB_USERNAME=""
declare GITHUB_PASSWORD=""
declare GITHUB_PROJECT=""

source "${SCRIPT_DIRECTORY}/src/internal/echo.sh"
source "${SCRIPT_DIRECTORY}/src/internal/set.sh"
source "${SCRIPT_DIRECTORY}/src/external/help.sh"
source "${SCRIPT_DIRECTORY}/src/external/help/set.sh"
source "${SCRIPT_DIRECTORY}/src/external/help/issue.sh"
source "${SCRIPT_DIRECTORY}/src/external/issue.sh"
source "${SCRIPT_DIRECTORY}/src/external/issue/list.sh"
source "${SCRIPT_DIRECTORY}/src/external/set.sh"
source "${SCRIPT_DIRECTORY}/src/external/exit.sh"
source "${SCRIPT_DIRECTORY}/src/external/reload.sh"
source "${SCRIPT_DIRECTORY}/src/shell.sh"

while [ "${1}" != "" ]
do

    case "${1}" in

        -h | --help)

            github_internal_echo "${SCRIPT_HELP}"
            exit 0

        ;;

        -s | --set)

            echo "${2}"  | tr ','  '\n' | while read line
            do
                key="$(echo ${line} | cut -d '=' -f 1)"
                value="$(echo ${line} | cut -d '=' -f 2-)"
                github_external_set "${key}" "${value}"
            done

        ;;

        -V)

            github_internal_echo "${SCRIPT_VERSION}"
            exit 0

        ;;

        -v | --version)

            github_internal_echo "${SCRIPT_NAME} version ${SCRIPT_VERSION}"
            github_internal_echo "${SCRIPT_DESCRIPTION}"
            exit 0

        ;;

        -u | --update)


            TEMPORARY=/tmp/github-sh_$(date +%s)
            curl -L git.io/github-sh -o ${TEMPORARY}
            chmod +x ${TEMPORARY}
            HEAD_VERSION=$(${TEMPORARY} -V)
            if [ "${HEAD_VERSION}" ==  "${SCRIPT_VERSION}" ]
            then
                github_internal_echo "Nothing to update." 32
                github_internal_echo "The last version of ${SCRIPT_NAME} is ${HEAD_VERSION}."
                rm -f ${TEMPORARY}
                exit 0
            fi

            if [ ! -w "${0}" ]
            then
                github_internal_echo "You don't have permission to update ${SCRIPT_NAME}." 31 1>&2
                rm -f ${TEMPORARY}
                exit 3
            fi

            mv ${TEMPORARY} "${0}"
            github_internal_echo "Successfully updated of ${SCRIPT_VERSION} to ${HEAD_VERSION}" 32
            exit 0

        ;;

        *)

            if [ "${1}" != "" ]
            then
                github_internal_echo "${SCRIPT_HELP_MESSAGE}" 1>&2
                exit 2
            fi

        ;;

    esac

    shift 2

done

github_shell