#!/usr/bin/env bash
# Interactive Github Shell.
# Copyright (C) 2012 Henrique Moody <henriquemoody@gmail.com>.
#
# Authors
# =======
#   Henrique Moody <henriquemoody@gmail.com>
#
# Changelog
# =========
#   0.1.3   Update help message.
#   0.1.3   Update prompt with defined user data.
#   0.1.2   Created OSX compatibility
#   0.1.1   Update script structure
#   0.1.0   Base script
#

# Readonly vars
declare -r GITHUBSH_NAME=$(basename "${0}")
declare -r GITHUBSH_SOURCE="${0}"
declare -r GITHUBSH_DIRECTORY="${HOME}/.github-sh"
declare -r GITHUBSH_HISTORY="${GITHUBSH_DIRECTORY}/history"
declare -r GITHUBSH_BASE_DIRECTORY=$(dirname "${0}")
declare -r GITHUBSH_DESCRIPTION=$(sed -n 2p "${0}" |  sed -E 's/^# ?//g')
declare -r GITHUBSH_VERSION=$(sed -n 11p "${0}" | awk '{print $2}')
declare -r GITHUBSH_PROMPT="github"
declare -r GITHUBSH_PROMPT_CHAR="> "
declare -r GITHUBSH_HELP="Usage: ${GITHUBSH_NAME} [OPTIONS]
${GITHUBSH_DESCRIPTION}

    -h, --help      Displays this help.
    -s, --set       Defines default values for variables (\"user\", \"password\", \"project\").
    -v, --version   Displays the version of the program.
    -u, --update    Self update ${GITHUBSH_NAME}.

Report bugs on https://github.com/henriquemoody/github-sh/issues."

# Global vars
declare GITHUB_PROMPT="${GITHUBSH_PROMPT}${GITHUBSH_PROMPT_CHAR}"
declare GITHUB_USERNAME=""
declare GITHUB_PASSWORD=""
declare GITHUB_PROJECT=""

# Check github directory
if [ ! -d "${GITHUBSH_DIRECTORY}" ]; then
    mkdir -p "${GITHUBSH_DIRECTORY}"
fi

source "${GITHUBSH_BASE_DIRECTORY}/src/echo.sh"
source "${GITHUBSH_BASE_DIRECTORY}/src/set.sh"
source "${GITHUBSH_BASE_DIRECTORY}/src/action/help.sh"
source "${GITHUBSH_BASE_DIRECTORY}/src/action/help/set.sh"
source "${GITHUBSH_BASE_DIRECTORY}/src/action/help/issue.sh"
source "${GITHUBSH_BASE_DIRECTORY}/src/action/issue.sh"
source "${GITHUBSH_BASE_DIRECTORY}/src/action/issue/list.sh"
source "${GITHUBSH_BASE_DIRECTORY}/src/action/set.sh"
source "${GITHUBSH_BASE_DIRECTORY}/src/action/exit.sh"
source "${GITHUBSH_BASE_DIRECTORY}/src/action/reload.sh"
source "${GITHUBSH_BASE_DIRECTORY}/src/shell.sh"

while [ "${1}" != "" ]; do

    case "${1}" in

        -h | --help)

            _echo "${GITHUBSH_HELP}"
            exit 0

        ;;

        -s | --set)

            echo "${2}"  | tr ','  '\n' | while read line; do
                key="$(echo ${line} | cut -d '=' -f 1)"
                value="$(echo ${line} | cut -d '=' -f 2-)"
                _action_set "${key}" "${value}"
            done

        ;;

        -V)

            _echo "${GITHUBSH_VERSION}"
            exit 0

        ;;

        -v | --version)

            _echo "${GITHUBSH_NAME} version ${GITHUBSH_VERSION}"
            _echo "${GITHUBSH_DESCRIPTION}"
            exit 0

        ;;

        -u | --update)


            TEMPORARY=/tmp/github-sh_$(date +%s)
            curl -L git.io/github-sh -o ${TEMPORARY}
            chmod +x ${TEMPORARY}
            HEAD_VERSION=$(${TEMPORARY} -V)
            if [ "${HEAD_VERSION}" ==  "${GITHUBSH_VERSION}" ]; then
                _echo "Nothing to update." 32
                _echo "The last version of ${GITHUBSH_NAME} is ${HEAD_VERSION}."
                rm -f ${TEMPORARY}
                exit 0
            fi

            if [ ! -w "${0}" ]; then
                _echo "You don't have permission to update ${GITHUBSH_NAME}." 31 1>&2
                rm -f ${TEMPORARY}
                exit 3
            fi

            mv ${TEMPORARY} "${0}"
            _echo "Successfully updated of ${GITHUBSH_VERSION} to ${HEAD_VERSION}" 32
            exit 0

        ;;

        *)

            if [ "${1}" != "" ]; then
                _echo "${GITHUBSH_HELP_MESSAGE}" 1>&2
                exit 2
            fi

        ;;

    esac

    shift 2

done

_shell
